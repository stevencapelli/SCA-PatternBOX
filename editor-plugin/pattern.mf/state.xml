<?xml version="1.0" encoding="iso-8859-1" ?>
<!DOCTYPE pattern SYSTEM "manifest.dtd">
<pattern id="state"
         name="State"
         topCategorie="GoF"
         subCategorie="Behavioral Pattern">

  <comment>
    Allow an object to alter its behavior when its internal state changes. The object
    will appear to change its class.
  </comment>

  <!-- ====================================================================== -->
  <role name="Context" min="1" max="1">
    <comment>
      <li>defines the interface of interest to clients.</li>
      <li>maintains an instance of a ConcreteState subclass that defines the current state.</li>
    </comment>
    <dependence roles="State" />
  </role>

  <!-- ====================================================================== -->
  <role name="State" min="1" max="1">
    <comment>
      <li>defines an interface for encapsulating the behavior associated with a particular state of the Context.</li>
    </comment>
  </role>

  <!-- ====================================================================== -->
  <role name="ConcreteState" min="1" max="n">
    <comment>
      <li>each subclass implements a behavior associated with a state of the Context.</li>
    </comment>
    <dependence roles="State Context" />
  </role>

</pattern>
