<?xml version="1.0" encoding="iso-8859-1" ?>
<!DOCTYPE templates SYSTEM "templates.dtd">

<!-- Copyright (C) 2003-2012 by Dirk Ehms, www.patternbox.com. All rights reserved. -->

<templates id="publishsubscribe" version="1.1">

  <!-- ====================================================================== -->
  <role name="Data" type="class" modifiers="public">  
   <field modifiers="private" type="java.lang.Object" name="item"></field>
<field modifiers="private" type="$Category$" name="category"></field>
<constructor modifiers="public">
      <comment>Constructor</comment>
<param type="java.lang.Object" name="item"/>
<param type="$Category$" name="category"/>
      <code>
        this.item=item;
	this.category=category;
      </code>
    </constructor>

 <method modifiers="public" return="java.lang.Object" name="getData">
      <comment>
       This method sets the Data
      </comment>
	<code>return item;</code>
 </method>
<method modifiers="public" return="Category" name="getCategory">
      <comment>
       This method sets the Category
      </comment>
	<code>return category;</code>
 </method>
 </role>

<!-- ====================================================================== -->
 <role name="Category" type="enum" modifiers="public">  
   
 </role>

<!-- ====================================================================== -->
  <role name="Publisher" type="interface" modifiers="public">

    <method modifiers="public" return="void" name="run">
	<comment>
        This method sends the Data to the Publish Component
	</comment>	
	<param type="$Data$" name="data"/>
	<param type="DispatcherImpl" name="dispatch"/>
    </method>

    <method modifiers="public" return="void" name="setMessage">
	<param type="$Data$" name="data"/>
    </method>
  </role>

  <!-- ====================================================================== -->
  <role name="DispatchPub" type="interface" modifiers="public">
 <import type="org.osoa.sca.annotations.*"/>

    <method modifiers="public" return="void" name="send">
	<annotation>@OneWay</annotation>      	
	<param type="$Data$" name="data"/>
	<param type="DispatcherImpl" name="dispatch"/>
    </method>

  </role>
  <!-- ====================================================================== -->
 <role name="DispatchSub" type="interface" modifiers="public">
 <import type="org.osoa.sca.annotations.*"/>

    <method modifiers="public" return="void" name="subscribe">
	<annotation>@OneWay</annotation>      	
	<param type="$Category$" name="category"/>
   <param type="int" name="b"/>
<param type="DispatcherImpl" name="dispatch"/>
 </method>
 <method modifiers="public" return="void" name="removeSubscribe">
	<annotation>@OneWay</annotation>      	
	<param type="$Category$" name="category"/>
   <param type="int" name="b"/>
<param type="DispatcherImpl" name="dispatch"/>
 </method>
  </role>
  <!-- ====================================================================== -->
<role name="SubscriberCommunicate" type="interface" modifiers="public">

<method modifiers="public" return="void" name="communicate">
	<annotation>@OneWay</annotation>
	<param type="$Data$" name="data"/>
</method>
<method modifiers="public" return="void" name="subscribe">
	<param type="$Category$" name="category"/>
	<param type="int" name="subscriberNum"/>
	<param type="DispatcherImpl" name="dispatcher"/>
</method>
<method modifiers="public" return="void" name="removeSubscribe">
	<param type="$Category$" name="category"/>
	<param type="int" name="subscriberNum"/>
	<param type="DispatcherImpl" name="dispatcher"/>
</method>
  </role>
  <!-- ====================================================================== -->
 <role name="RowList" type="class" modifiers="public">  
   <field modifiers="private" type="int" name="subscriberNumber"></field>
<field modifiers="private" type="Category" name="category"></field>
<constructor modifiers="public">
      <comment>Constructor</comment>
<param type="$Category$" name="category"/>
<param type="int" name="subNum"/>

      <code>
        this.subscriberNumber = subNum;
	this.category = category;
      </code>
    </constructor>

 <method modifiers="public" return="int" name="getSubscriber">
      <comment>
       This method gets the subscriber's number
      </comment>
	<code>return subscriberNumber;</code>
 </method>
<method modifiers="public" return="Category" name="getCategory">
      <comment>
       This method gets the Category
      </comment>
	<code>return category;</code>
 </method>

<method modifiers="public" return="void" name="setCategory">
      <comment>
       This method sets the Category
      </comment>
<param type="$Category$" name="category"/>
	<code>this.category=category;</code>
 </method>

<method modifiers="public" return="void" name="setSubscriber">
      <comment>
       This method sets the subscriber's number
      </comment>
<param type="int" name="subscriber"/>
	<code>this.subscriberNumber=subscriber;</code>
 </method>
 </role>

<!-- ====================================================================== --> 
 <role name="PublisherImpl" type="class" modifiers="public">
 <import type="org.osoa.sca.annotations.*"/>
<annotation>@Service(Publisher.class)</annotation>     
<interface type="$Publisher$"/>

    <field modifiers="protected" type="DispatchPub" name="dispatch">
	<annotation>@Reference</annotation> 
    </field>
<field modifiers="private" type="Data" name="data">
    </field>
<constructor modifiers="public">
      <comment>Constructor</comment>
      <code>
        super();
      </code>
    </constructor>

    <method modifiers="public" return="void" name="run">
	<param type="$Data$" name="data"/>
	<param type="DispatcherImpl" name="d"/>
      <code>
	dispatch.send(data,d);
      </code>
    </method>

    <method modifiers="public" return="void" name="setMessage">
	<comment>This method sets the Message</comment>     
	<param type="$Data$" name="data"/>
	<code>
	this.data=data;
	</code>
     </method>

  </role>
 <!-- ====================================================================== -->
  <role name="DispatcherImpl" type="class" modifiers="public">
 <import type="org.osoa.sca.annotations.*"/>
<import type="java.util.LinkedList"/>

<annotation>@Service(interfaces={DispatchPub.class, DispatchSub.class})</annotation>     
<interface type="$DispatchPub$"/>
<interface type="$DispatchSub$"/>

    <field modifiers="private" type="SubscriberCommunicate []" name="listSubscriber">
	<annotation>@Reference</annotation> 
    </field>
<field modifiers="private" type="Java.util.LinkedList&lt;RowList&gt;" name="table"> </field>

<constructor modifiers="public">
      <comment>Constructor</comment>
      <code>
        table=new LinkedList&lt;RowList&gt;();
      </code>
    </constructor>

    <method modifiers="public" return="void" name="subscribe">     
	<param type="Category" name="category"/>  
<param type="int" name="b"/>
<param type="DispatcherImpl" name="dispatch"/> 
	<code>
	RowList row=new RowList(category,b);
	dispatch.table.add(row);
      </code>
    </method>

    <method modifiers="public" return="void" name="send">  
	 
	<param type="$Data$" name="data"/>
	<param type="DispatcherImpl" name="dispatch"/>
	<code>
	Category dataCategory=data.getCategory();
		for(RowList row: dispatch.table)
		{
			if(row.getCategory()==dataCategory)
			{
				int i=row.getSubscriber();
			  listSubscriber[i].communicate(data);
			}
		}
	</code>
     </method>
 <method modifiers="public" return="void" name="removeSubscribe">
	<comment>This method removes a Subscriber from the list</comment>
	<param type="Category" name="category"/>
	<param type="int" name="b"/>
<param type="DispatcherImpl" name="dispatch"/>
	<code>
	int cont=0;
		for(RowList row: dispatch.table)
		{
			if((row.getCategory()==category) &amp;&amp; (row.getSubscriber()==b))
			{
				dispatch.table.remove(cont);
				break;
			}
			cont++;
		}
	</code>
     </method>

  </role>
 <!-- ====================================================================== -->

  <role name="SubscriberImpl" type="class" modifiers="public">
 <import type="org.osoa.sca.annotations.*"/>
<annotation>@Service(SubscriberCommunicate.class)</annotation>     
<interface type="$SubscriberCommunicate$"/>

    <field modifiers="protected" type="DispatchSub" name="dispatchSub">
	<annotation>@Reference</annotation> 
    </field>

<constructor modifiers="public">
      <comment>Constructor</comment>
      <code>
        super();
      </code>
    </constructor>

    <method modifiers="public" return="void" name="communicate">
      <param type="$Data$" name="data"/>
	<code>
	doSomething(data);
      </code>
    </method>

<method modifiers="public" return="void" name="doSomething">
      <param type="$Data$" name="data"/>
	<code>
	//TODO Write your algorithm here...
      </code>
    </method>

<method modifiers="public" return="void" name="subscribe">
      <param type="$Category$" name="category"/>
	<param type="int" name="subscriberNum"/>
	<param type="$DispatcherImpl$" name="dispatcher"/>
	<code>
	dispatchSub.subscribe(category, subscriberNum, dispatcher);
      </code>
    </method>

<method modifiers="public" return="void" name="removeSubscribe">
      <param type="$Category$" name="category"/>
	<param type="int" name="subscriberNum"/>
	<param type="$DispatcherImpl$" name="dispatcher"/>
	<code>
	dispatchSub.removeSubscribe(category, subscriberNum, dispatcher);
      </code>
    </method>
  </role>

</templates>
